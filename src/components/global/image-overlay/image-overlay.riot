<image-overlay>

    <form onsubmit="{submit}">
        名前: <input type="text" name="name" value="{texts.name}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
        <h2>なんでもTOP3</h2>
        <div class="row">
            <div class="column column-20">
            好きな野菜:
            </div>
            <div class="column column-30">
                <label> 1位</label>
                <input type="text" name="vegetable_1" value="{texts.vegetable_1}" oninput="{e => this.updateText(e.target.name, e.target.value)}"> 
            </div>
            <div class="column column-30">
                <label> 2位</label>
                <input type="text" name="vegetable_2" value="{texts.vegetable_2}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label> 3位</label>
                <input type="text" name="vegetable_3" value="{texts.vegetable_3}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
        </div>
        <div class="row">
            <div class="column column-20">
                好きな果物:
            </div>
            <div class="column column-30">
                <label> 1位</label>
                <input type="text" name="fruits_1" value="{texts.fruits_1}" oninput="{e => this.updateText(e.target.name, e.target.value)}"> 
            </div>
            <div class="column column-30">
                <label> 2位</label>
                <input type="text" name="fruits_2" value="{texts.fruits_2}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label> 3位</label>
                <input type="text" name="fruits_3" value="{texts.fruits_3}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
         </div>
        <div class="row">
            <div class="column column-20">
                好きな味噌汁の具:
            </div>
            <div class="column column-30">
                <label> 1位</label>
                <input type="text" name="miso_soup_1" value="{texts.miso_soup_1}" oninput="{e => this.updateText(e.target.name, e.target.value)}"> 
            </div>
            <div class="column column-30">
                <label> 2位</label>
                <input type="text" name="miso_soup_2" value="{texts.miso_soup_2}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label> 3位</label>
                <input type="text" name="miso_soup_3" value="{texts.miso_soup_3}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
         </div>
        <div class="row">
            <div class="column column-20">
                好きな飲み物:
            </div>
            <div class="column column-30">
                <label> 1位</label>
                <input type="text" name="drink_1" value="{texts.drink_1}" oninput="{e => this.updateText(e.target.name, e.target.value)}"> 
            </div>
            <div class="column column-30">
                <label> 2位</label>
                <input type="text" name="drink_2" value="{texts.drink_2}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label> 3位</label>
                <input type="text" name="drink_3" value="{texts.drink_3}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
         </div>
         <h2>何でもマイベスト</h2>
        <div class="row">
            <div class="column column-30">
                <label>寿司</label>
                <input type="text" name="sushi" value="{texts.sushi}" oninput="{e => this.updateText(e.target.name, e.target.value)}"> 
            </div>
            <div class="column column-30">
                <label>パスタ</label>
                <input type="text" name="pasta" value="{texts.pasta}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>ラーメン</label>
                <input type="text" name="ramen" value="{texts.ramen}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>パン</label>
                <input type="text" name="bread" value="{texts.bread}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
        </div>
        <div class="row">
            <div class="column column-30">
                <label>コンビニチキン</label>
                <input type="text" name="chicken" value="{texts.chicken}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>丼物</label>
                <input type="text" name="don" value="{texts.don}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>きのこ</label>
                <input type="text" name="mashroom" value="{texts.mashroom}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>カップヌードルの味</label>
                <input type="text" name="cupnoodles" value="{texts.cupnoodles}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
        </div>
        <div class="row">
            <div class="column column-30">
                <label>おでんの具</label>
                <input type="text" name="oden" value="{texts.oden}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>おにぎり</label>
                <input type="text" name="onigiri" value="{texts.onigiri}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>おつまみ</label>
                <input type="text" name="otumami" value="{texts.otumami}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>中華まん</label>
                <input type="text" name="man" value="{texts.man}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
         </div>
         <h2>スイーツ＆お菓子</h2>
        <div class="row">
            <div class="column column-30">
                <label>駄菓子</label>
                <input type="text" name="dagashi" value="{texts.dagashi}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>アイス</label>
                <input type="text" name="icecream" value="{texts.icecream}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>ケーキ</label>
                <input type="text" name="cake" value="{texts.cake}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
        </div>
        <div class="row">
            <div class="column column-30">
                <label>ポテチ</label>
                <input type="text" name="potatochips" value="{texts.potatochips}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>チョコ</label>
                <input type="text" name="chocolate" value="{texts.chocolate}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>グミ</label>
                <input type="text" name="gumi" value="{texts.gumi}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
        </div>
         <h2>この店では絶対これ！</h2>
        <div class="row">

            <div class="column column-30">
                <label>ミスタードーナツ</label>
                <input type="text" name="misterdonats" value="{texts.misterdonats}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>マクドナルド</label>
                <input type="text" name="mcdonald" value="{texts.mcdonald}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>サイゼリヤ</label>
                <input type="text" name="saizeriya" value="{texts.saizeriya}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
        </div>
        <div class="row">
            <div class="column column-30">
                <label>スターバックス</label>
                <input type="text" name="starbucks" value="{texts.starbucks}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>

            <div class="column column-30">
                <label>大戸屋</label>
                <input type="text" name="ootoya" value="{texts.ootoya}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
        </div>
         <h2>どっち派？のコーナー</h2>
        <div class="row">
            <div class="column column-20">
                朝
            </div>
            <div class="column column-30">
                <input type="radio" name="morning" value="bread"  checked="{circles.morning==='bread'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">パン派
                <input type="radio" name="morning" value="rice"  checked="{circles.morning==='rice'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">ご飯派
            </div>
        </div>
        <div class="row">
            <div class="column column-20">
                ラーメン
            </div>
            <div class="column column-30">
                <input type="radio" name="ramen" value="shouyu"  checked="{circles.ramen==='shouyu'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">醤油
                <input type="radio" name="ramen" value="sio"  checked="{circles.ramen==='sio'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">塩
                <input type="radio" name="ramen" value="miso"  checked="{circles.ramen==='miso'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">味噌
                <input type="radio" name="ramen" value="tonkotu"  checked="{circles.ramen==='tonkotu'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">豚骨
            </div>
        </div>
        <div class="row">
            <div class="column column-20">
                ポップコーン
            </div>
            <div class="column column-30">
                <input type="radio" name="popcorn" value="salt"  checked="{circles.popcorn==='salt'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">塩
                <input type="radio" name="popcorn" value="caramell"  checked="{circles.popcorn==='caramell'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">キャラメル
            </div>
        </div>

        <div class="row">
            <div class="column column-20">
                あんこ
            </div>
            <div class="column column-30">
                <input type="radio" name="anko" value="kosi"  checked="{circles.anko==='kosi'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">こしあん
                <input type="radio" name="anko" value="tubu"  checked="{circles.anko==='tubu'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">つぶあん
            </div>
        </div>

        <div class="row">
            <div class="column column-20">
                卵焼き
            </div>
            <div class="column column-30">
                <input type="radio" name="tamagoyaki" value="sweety"  checked="{circles.tamagoyaki==='sweety'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">甘め
                <input type="radio" name="tamagoyaki" value="salty"  checked="{circles.tamagoyaki==='salty'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">しょっぱめ
                <input type="radio" name="tamagoyaki" value="dashi"  checked="{circles.tamagoyaki==='dashi'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">だし
            </div>
        </div>

        <div class="row">
            <div class="column column-20">
                カントリーマアム
            </div>
            <div class="column column-30">
                <input type="radio" name="countrymaam" value="white"  checked="{circles.countrymaam==='white'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">白
                <input type="radio" name="countrymaam" value="brown"  checked="{circles.countrymaam==='brown'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">茶
            </div>
        </div>
        <div class="row">
            <div class="column column-20">
                柿ピーの重要度
            </div>
            <div class="column column-30">
                <input type="radio" name="kakip" value="kaki"  checked="{circles.kakip==='kaki'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">柿
                <input type="radio" name="kakip" value="p"  checked="{circles.kakip==='p'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">ピー
            </div>
        </div>
        <div class="row">
            <div class="column column-20">
                仕事中の飲み物
            </div>
            <div class="column column-30">
                <input type="radio" name="workdrink" value="coffee"  checked="{circles.workdrink==='coffee'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">コーヒー
                <input type="radio" name="workdrink" value="tea"  checked="{circles.workdrink==='tea'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">紅茶
                <input type="radio" name="workdrink" value="etc"  checked="{circles.workdrink==='etc'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">その他
            </div>
        </div>
        <div class="row">
            <div class="column column-20">
                アイス
            </div>
            <div class="column column-30">
                <input type="radio" name="icecream" value="cap"  checked="{circles.icecream==='cap'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">カップ
                <input type="radio" name="icecream" value="cone"  checked="{circles.icecream==='cone'}" oninput="{e => this.updateSelect(e.target.name, e.target.value)}">コーン
            </div>
        </div>
        <h2>最近ハマっている食べ物</h2>
        <div class="row">
            <div class="column column-30">
                <label></label>
                <input type="text" name="myboom" value="{texts.myboom}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>理由</label>
                <input type="text" name="myboom_reason" value="{texts.myboom_reason}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
        </div>
        <h2>コンビニで買えるもので大好きベスト３</h2>
        <div class="row">
            <div class="column column-30">
                <label>1位</label>
                <input type="text" name="convenience_1" value="{texts.convenience_1}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>2位</label>
                <input type="text" name="convenience_2" value="{texts.convenience_2}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>3位</label>
                <input type="text" name="convenience_3" value="{texts.convenience_3}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
        </div>
        
        <h2>苦手 OR まだ良さがわからない食べ物</h2>
        <div class="row">
            <div class="column column-30">
                <label>その1</label>
                <input type="text" name="nigate_1" value="{texts.nigate_1}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
                <label>理由</label>
                <input type="text" name="nigate_1_reason" value="{texts.nigate_1_reason}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>その2</label>
                <input type="text" name="nigate_2" value="{texts.nigate_2}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
                <label>理由</label>
                <input type="text" name="nigate_2_reason" value="{texts.nigate_2_reason}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
        </div>
        <div class="row">
            <div class="column column-30">
                <label>その3</label>
                <input type="text" name="nigate_3" value="{texts.nigate_3}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
                <label>理由</label>
                <input type="text" name="nigate_3_reason" value="{texts.nigate_3_reason}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label>その4</label>
                <input type="text" name="nigate_4" value="{texts.nigate_4}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
                <label>理由</label>
                <input type="text" name="nigate_4_reason" value="{texts.nigate_4_reason}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
        </div>
        <h2>死ぬ前にこれ食べたい</h2>
        <input type="text" name="before_death" value="{texts.before_death}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
        
        <h2>まだ食べてないけど食べたい</h2>
        <input type="text" name="havent_eaten" value="{texts.havent_eaten}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
        
        <h2>大人になってから好きになった</h2>
        <input type="text" name="adult" value="{texts.adult}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
        
        <h2>海外の料理で特に好きなもの</h2>
        <input type="text" name="foreign" value="{texts.foreign}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
        
        
        <h2>マイベストご飯屋</h2>
        <div class="row">
            <div class="column column-30">
                <label> 1位</label>
                <input type="text" name="mybest_restaurant_1" value="{texts.mybest_restaurant_1}" oninput="{e => this.updateText(e.target.name, e.target.value)}"> 
            </div>
            <div class="column column-30">
                <label> 2位</label>
                <input type="text" name="mybest_restaurant_2" value="{texts.mybest_restaurant_2}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label> 3位</label>
                <input type="text" name="mybest_restaurant_3" value="{texts.mybest_restaurant_3}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
        </div>
        <h2>個人的TOP3</h2>
        <div class="column column-30">
            <input type="text" name="myranking" value="{texts.myranking}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
        </div>
        <div class="row">
            <div class="column column-30">
                <label> 1位</label>
                <input type="text" name="myranking_1" value="{texts.myranking_1}" oninput="{e => this.updateText(e.target.name, e.target.value)}"> 
            </div>
            <div class="column column-30">
                <label> 2位</label>
                <input type="text" name="myranking_2" value="{texts.myranking_2}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
            <div class="column column-30">
                <label> 3位</label>
                <input type="text" name="myranking_3" value="{texts.myranking_3}" oninput="{e => this.updateText(e.target.name, e.target.value)}">
            </div>
        </div>
        <button type="submit">Add Text to Image</button>
    </form>

    <div>
        <canvas ref="canvas" id="imageCanvas" width="1283" height="934"></canvas>
    </div>

    <button onclick="{downloadCanvas}">Download Image</button>
    <script>
        import { onMounted, onBeforeUnmount } from 'riot';

        export default {
            texts: {},
            circles: {
                morning: '',
                ramen: '',
                popcorn: '',
                anko: '',
                tamagoyaki: '',
                countrymaam: '',
                kakip: '',
                workdrink: '',
                icecream: '',
            },
            onMounted() {
                window.addEventListener('beforeunload', this.saveInput);
                this.restoreInput();
            },
            onBeforeUnmount() {
                window.removeEventListener('beforeunload', this.saveInput);
            },

            updateText(name, newText) {
                this.texts[name] = newText;
                this.update();
            },

            updateSelect(name, newSelect) {
                this.circles[name] = newSelect;
                this.update();
            },
            saveInput() {
                localStorage.setItem('texts', JSON.stringify(this.texts));
                localStorage.setItem('circles', JSON.stringify(this.circles));
            },
            restoreInput() {
                const texts = localStorage.getItem('texts');
                if (texts) {
                    this.texts = JSON.parse(texts);
                }
                const circles = localStorage.getItem('circles');
                if (circles) {
                    this.circles = JSON.parse(circles);
                }
                this.update();

            },


            positions: {
                name: {
                    x: 364,
                    y: 53,
                    fontSize: 30,
                    maxWidth: 227,
                    maxHeight: 35,
                },
                vegetable_1: {
                    x: 210,
                    y: 141,
                    fontSize: 17,
                    maxWidth: 117,
                    maxHeight: 36,
                },
                vegetable_2: {
                    x: 349,
                    y: 141,
                    fontSize: 17,
                    maxWidth: 117,
                    maxHeight: 36,
                },
                vegetable_3: {
                    x: 490,
                    y: 141,
                    fontSize: 17,
                    maxWidth: 117,
                    maxHeight: 36,
                },
                fruits_1: {
                    x: 210,
                    y: 193,
                    fontSize: 17,
                    maxWidth: 117,
                    maxHeight: 36,
                },
                fruits_2: {
                    x: 349,
                    y: 193,
                    fontSize: 17,
                    maxWidth: 117,
                    maxHeight: 36,
                },
                fruits_3: {
                    x: 490,
                    y: 193,
                    fontSize: 17,
                    maxWidth: 117,
                    maxHeight: 36,
                },
                miso_soup_1: {
                    x: 210,
                    y: 246,
                    fontSize: 17,
                    maxWidth: 117,
                    maxHeight: 36,
                },
                miso_soup_2: {
                    x: 349,
                    y: 246,
                    fontSize: 17,
                    maxWidth: 117,
                    maxHeight: 36,
                },
                miso_soup_3: {
                    x: 490,
                    y: 246,
                    fontSize: 17,
                    maxWidth: 117,
                    maxHeight: 36,
                },
                drink_1: {
                    x: 210,
                    y: 298,
                    fontSize: 17,
                    maxWidth: 117,
                    maxHeight: 36,
                },
                drink_2: {
                    x: 349,
                    y: 298,
                    fontSize: 17,
                    maxWidth: 117,
                    maxHeight: 36,
                },
                drink_3: {
                    x: 490,
                    y: 298,
                    fontSize: 17,
                    maxWidth: 117,
                    maxHeight: 36,
                },
                sushi: {
                    x: 34,
                    y: 411,
                    fontSize: 17,
                    maxWidth: 124,
                    maxHeight: 36,
                },
                pasta: {
                    x: 184,
                    y: 411,
                    fontSize: 17,
                    maxWidth: 124,
                    maxHeight: 36,
                },
                ramen: {
                    x: 333,
                    y: 411,
                    fontSize: 17,
                    maxWidth: 124,
                    maxHeight: 36,
                },
                bread: {
                    x: 479,
                    y: 411,
                    fontSize: 17,
                    maxWidth: 124,
                    maxHeight: 36,
                },
                chicken: {
                    x: 34,
                    y: 472,
                    fontSize: 17,
                    maxWidth: 124,
                    maxHeight: 36,
                },
                don: {
                    x: 184,
                    y: 472,
                    fontSize: 17,
                    maxWidth: 124,
                    maxHeight: 36,
                },
                mashroom: {
                    x: 333,
                    y: 472,
                    fontSize: 17,
                    maxWidth: 124,
                    maxHeight: 36,
                },
                cupnoodles: {
                    x: 479,
                    y: 472,
                    fontSize: 17,
                    maxWidth: 124,
                    maxHeight: 36,
                },
                oden: {
                    x: 34,
                    y: 533,
                    fontSize: 17,
                    maxWidth: 124,
                    maxHeight: 36,
                },
                onigiri: {
                    x: 184,
                    y: 533,
                    fontSize: 17,
                    maxWidth: 124,
                    maxHeight: 36,
                },
                otumami: {
                    x: 333,
                    y: 533,
                    fontSize: 17,
                    maxWidth: 124,
                    maxHeight: 36,
                },
                man: {
                    x: 479,
                    y: 533,
                    fontSize: 17,
                    maxWidth: 124,
                    maxHeight: 36,
                },
                dagashi: {
                    x: 41,
                    y: 667,
                    fontSize: 17,
                    maxWidth: 89,
                    maxHeight: 58,
                },
                icecream: {
                    x: 41,
                    y: 767,
                    fontSize: 17,
                    maxWidth: 89,
                    maxHeight: 58,
                },
                cake: {
                    x: 41,
                    y: 867,
                    fontSize: 17,
                    maxWidth: 89,
                    maxHeight: 58,
                },
                potatochips: {
                    x: 148,
                    y: 667,
                    fontSize: 17,
                    maxWidth: 89,
                    maxHeight: 58,
                },
                chocolate: {
                    x: 148,
                    y: 767,
                    fontSize: 17,
                    maxWidth: 89,
                    maxHeight: 58,
                },
                gumi: {
                    x: 148,
                    y: 867,
                    fontSize: 17,
                    maxWidth: 89,
                    maxHeight: 58,
                },
                misterdonats: {
                    x: 309,
                    y: 641,
                    fontSize: 17,
                    maxWidth: 281,
                    maxHeight: 34,
                },
                mcdonald: {
                    x: 309,
                    y: 705,
                    fontSize: 17,
                    maxWidth: 281,
                    maxHeight: 34,
                },
                saizeriya: {
                    x: 309,
                    y: 767,
                    fontSize: 17,
                    maxWidth: 281,
                    maxHeight: 34,
                },
                starbucks: {
                    x: 309,
                    y: 829,
                    fontSize: 17,
                    maxWidth: 281,
                    maxHeight: 34,
                },
                ootoya: {
                    x: 309,
                    y: 891,
                    fontSize: 17,
                    maxWidth: 281,
                    maxHeight: 34,
                },
                myboom: {
                    x: 979,
                    y: 75,
                    fontSize: 17,
                    maxWidth: 262,
                    maxHeight: 44,
                },
                myboom_reason: {
                    x: 979,
                    y: 135,
                    fontSize: 17,
                    maxWidth: 262,
                    maxHeight: 30,
                },
                convenience_1: {
                    x: 964,
                    y: 283,
                    fontSize: 17,
                    maxWidth: 89,
                    maxHeight: 74,
                },
                convenience_2: {
                    x: 1069,
                    y: 283,
                    fontSize: 17,
                    maxWidth: 89,
                    maxHeight: 74,
                },
                convenience_3: {
                    x: 1168,
                    y: 283,
                    fontSize: 17,
                    maxWidth: 89,
                    maxHeight: 74,
                },
                nigate_1: {
                    x: 668,
                    y: 429,
                    fontSize: 17,
                    maxWidth: 115,
                    maxHeight: 36,
                },
                nigate_1_reason: {
                    x: 826,
                    y: 429,
                    fontSize: 17,
                    maxWidth: 115,
                    maxHeight: 36,
                },
                nigate_2: {
                    x: 668,
                    y: 472,
                    fontSize: 17,
                    maxWidth: 115,
                    maxHeight: 36,
                },
                nigate_2_reason: {
                    x: 826,
                    y: 472,
                    fontSize: 17,
                    maxWidth: 115,
                    maxHeight: 36,
                },
                nigate_3: {
                    x: 969,
                    y: 429,
                    fontSize: 17,
                    maxWidth: 115,
                    maxHeight: 36,
                },
                nigate_3_reason: {
                    x: 1127,
                    y: 429,
                    fontSize: 17,
                    maxWidth: 115,
                    maxHeight: 36,
                },
                nigate_4: {
                    x: 969,
                    y: 472,
                    fontSize: 17,
                    maxWidth: 115,
                    maxHeight: 36,
                },
                nigate_4_reason: {
                    x: 1127,
                    y: 472,
                    fontSize: 17,
                    maxWidth: 115,
                    maxHeight: 36,
                },
                before_death: {
                    x: 668,
                    y: 558,
                    fontSize: 17,
                    maxWidth: 284,
                    maxHeight: 36,
                },
                havent_eaten: {
                    x: 971,
                    y: 556,
                    fontSize: 17,
                    maxWidth: 284,
                    maxHeight: 36,
                },
                adult: {
                    x: 668,
                    y: 638,
                    fontSize: 17,
                    maxWidth: 284,
                    maxHeight: 36,
                },
                foreign: {
                    x: 971,
                    y: 638,
                    fontSize: 17,
                    maxWidth: 284,
                    maxHeight: 36,
                },
                mybest_restaurant_1: {
                    x: 729,
                    y: 756,
                    fontSize: 17,
                    maxWidth: 204,
                    maxHeight: 36,
                },
                mybest_restaurant_2: {
                    x: 729,
                    y: 808,
                    fontSize: 17,
                    maxWidth: 204,
                    maxHeight: 36,
                },
                mybest_restaurant_3: {
                    x: 729,
                    y: 857,
                    fontSize: 17,
                    maxWidth: 204,
                    maxHeight: 36,
                },
                myranking: {
                    x: 1067,
                    y: 705,
                    fontSize: 17,
                    maxWidth: 120,
                    maxHeight: 36,
                },
                myranking_1: {
                    x: 1057,
                    y: 767,
                    fontSize: 17,
                    maxWidth: 178,
                    maxHeight: 36,
                },
                myranking_2: {
                    x: 1057,
                    y: 821,
                    fontSize: 17,
                    maxWidth: 178,
                    maxHeight: 36,
                },
                myranking_3: {
                    x: 1057,
                    y: 876,
                    fontSize: 17,
                    maxWidth: 178,
                    maxHeight: 36,
                },
            },

            circle_positions: {
                morning: {
                    bread: {
                        x: 740,
                        y: 83,
                    },
                    rice: {
                        x: 791,
                        y: 83,
                    },
                },
                ramen: {
                    shouyu: {
                        x: 784,
                        y: 113,
                    },
                    sio: {
                        x: 826,
                        y: 113,
                    },
                    miso: {
                        x: 868,
                        y: 113,
                    },
                    tonkotu: {
                        x: 910,
                        y: 113,
                    },
                },
                popcorn: {
                    salt: {
                        x: 807,
                        y: 143,
                    },
                    caramell: {
                        x: 865,
                        y: 143,
                    },
                },
                anko: {
                    kosi: {
                        x: 781,
                        y: 174,
                    },
                    tubu: {
                        x: 861,
                        y: 174,
                    },
                },
                tamagoyaki: {
                    sweety: {
                        x: 771,
                        y: 204,
                    },
                    salty: {
                        x: 834,
                        y: 204,
                    },
                    dashi: {
                        x: 894,
                        y: 204,
                    },
                },
                countrymaam: {
                    white: {
                        x: 836,
                        y: 237,
                    },
                    brown: {
                        x: 874,
                        y: 237,
                    },
                },
                kakip: {
                    kaki: {
                        x: 820,
                        y: 267,
                    },
                    p: {
                        x: 861,
                        y: 267,
                    },
                },
                workdrink: {
                    coffee: {
                        x: 779,
                        y: 297,
                    },
                    tea: {
                        x: 848,
                        y: 297,
                    },
                    etc: {
                        x: 906,
                        y: 297,
                    },
                },
                icecream: {
                    cap: {
                        x: 777,
                        y: 327,
                    },
                    cone: {
                        x: 839,
                        y: 327,
                    },
                },
            },

            clearText() {
                this.texts = {};
                this.circles = {};
                this.update()
            },


            submit(e) {
                e.preventDefault();
                const canvas = this.$('canvas');
                const ctx = canvas.getContext('2d');
                const image = new Image();
                image.onload = () => {
                    ctx.drawImage(image, 0, 0, canvas.width, canvas.height);
                    for (let name in this.texts) {
                        const text = this.texts[name];
                        const position = this.positions[name];
                        drawText(ctx, text, position.x, position.y, position.maxWidth, position.maxHeight, `${position.fontSize}px sans-serif`, 'black');
                    }
                    for (let name in this.circles) {
                        const position = this.circle_positions[name][this.circles[name]];
                        drawCircle(ctx, position.x, position.y, 15, 'black', 3);
                    }
                };

                image.src = 'https://img.dailyportalz.jp/2116/7954/6433/base.jpg'; // 画像のパスを指定
            },
            downloadCanvas() {
                const canvas = this.$('canvas');
                const dataURL = canvas.toDataURL('image/png');
                const link = document.createElement('a');
                link.href = dataURL;
                link.download = 'canvas-image.png';
                link.click();
            }
        };

        /**
        * 指定された設定で文字列をCanvasに描画する関数
        * @param {CanvasRenderingContext2D} ctx - Canvasのコンテキスト
        * @param {string} text - 描画するテキスト
        * @param {number} x - X座標
        * @param {number} y - Y座標
        * @param {number} maxWidth - 最大幅
        * @param {number} maxHeight - 最大高さ
        * @param {string} font - フォント設定
        * @param {string} color - テキストの色
        */
        function drawText(ctx, text, x, y, maxWidth, maxHeight, font, color) {
            ctx.font = font;
            ctx.fillStyle = color;
            let lineHeight = ctx.measureText('M').width * 1.2;
            let characters = Array.from(text);
            let minFontSize = 10; // 最小フォントサイズを10pxとする

            // テキスト全体が最大幅に収まるようにフォントサイズを調整
            while (ctx.measureText(text).width > maxWidth && parseInt(ctx.font) > minFontSize) {
                ctx.font = reduceFontSize(ctx.font);
                lineHeight = ctx.measureText('M').width * 1.2;
            }

            let line = '';
            let lines = [];

            // 文字を一つずつ処理して、調整後のフォントサイズで指定した幅に収まるように折り返す
            for (let n = 0; n < characters.length; n++) {
                let testLine = line + characters[n];
                let metrics = ctx.measureText(testLine);
                let testWidth = metrics.width;
                if (testWidth > maxWidth && n > 0) {
                    lines.push(line);
                    line = characters[n];
                } else {
                    line = testLine;
                }
            }
            lines.push(line);

            // テキストの描画開始位置を調整
            let textHeight = lines.length * lineHeight;
            let startY = y + lineHeight / 2; // ベースラインを考慮
            if (lines.length > 1) {
                startY -= textHeight / 2; // 複数行の場合、中央揃え
            }

            // テキストを描画
            for (let i = 0; i < lines.length; i++) {
                ctx.fillText(lines[i], x, startY + (i * lineHeight));
            }
        }


        /**
        * フォントサイズを減少させる関数
        * @param {string} font - 現在のフォント設定
        * @returns {string} 新しいフォント設定
        */
        function reduceFontSize(font) {
            const fontSizePattern = /\d+px/;
            const fontSize = parseInt(font.match(fontSizePattern)[0]);
            const newFontSize = Math.max(fontSize - 1, 1); // 最小サイズを1pxに制限
            return font.replace(fontSizePattern, `${newFontSize}px`);
        }


        /**
        * 指定された設定で円をCanvasに描画する関数
        * @param {CanvasRenderingContext2D} ctx - Canvasのコンテキスト
        * @param {number} x - X座標
        * @param {number} y - Y座標
        * @param {number} radius - 半径
        * @param {string} borderColor - 円の色
        * @param {number} borderWidth - 線の太さ
        */
        function drawCircle(ctx, x, y, radius, borderColor, borderWidth = 1) {
            ctx.beginPath();
            ctx.arc(x, y, radius, 0, Math.PI * 2);
            ctx.lineWidth = borderWidth;
            ctx.strokeStyle = borderColor;
            ctx.stroke();
            ctx.closePath();
        }
    </script>
</image-overlay>
